#!/usr/bin/env python
from setup_utils import *
import os

# r92

actions, options, arg = getActions()
props = actions.getGlassfish("r92-setup.properties", ["dbProperties", "glassfish", "driver", "port"])

prop_name = "r92.properties"
prop_list = ["icat.url", "ids.url", "gangliaHost", "pbsnodes", "qsig", "qstat", "qsub", "prepareaccount",
"passwordDurationSeconds", "poolPrefix", "reader"]

if arg in ["CONFIGURE", "INSTALL"]:
    actions.configure(prop_name, prop_list)
    actions.checkNoErrors()
    
if arg == "INSTALL":
    r92Properties = actions.getProperties(prop_name, prop_list)        
    actions.installFile("r92.properties")
    
    try:    
        app = actions.getAppName("ijp.r92")
        if app: actions.asadmin("undeploy " + app)
        
        actions.asadmin("delete-jdbc-resource jdbc/r92", tolerant=True)
        actions.asadmin("delete-jdbc-connection-pool r92", tolerant=True)
        
        actions.asadmin('create-jdbc-connection-pool --datasourceclassname ' + props["driver"] + 
                ' --restype javax.sql.DataSource --failconnection=true --steadypoolsize 2' + 
                ' --maxpoolsize 8 --ping --property ' + props["dbProperties"] + ' r92', printOutput=True)
        
        actions.asadmin("create-jdbc-resource --connectionpoolid ijp jdbc/r92")
      
        actions.deploy("ijp.r92-*.war")
                    
    except Exception, e:
        abort(str(e))
               
if arg == "UNINSTALL":
    
    actions.removeFile("r92.properties")
    
    try:
        app = actions.getAppName("ijp.r92")
        if app: actions.asadmin("undeploy " + app)
        actions.asadmin("delete-jdbc-resource jdbc/r92", tolerant=True)
        actions.asadmin("delete-jdbc-connection-pool r92", tolerant=True)   
    except Exception, e:
        abort(str(e))       
    
            
    
